{"version":3,"file":"bundle.js","mappings":"mBAkBAA,QAAQC,ICVgBC,G","sources":["webpack://aula02/./src/index.js","webpack://aula02/./src/modulo1.js"],"sourcesContent":["// import {nome as nome2, sobrenome, idade, soma, Pessoa as classePessoa} from './modulo1';\r\n// const p1 = new classePessoa('Jimmy', 'Carter');\r\n// console.log(p1);\r\n// const nome = 'Jimmy';\r\n\r\n// console.log(nome, sobrenome, idade);\r\n// console.log(`esse é o nome2 ${nome2}`);\r\n// console.log(soma(5,2));\r\n\r\n// Podemos importar os dados de outro modulo da maneira tradicional acima, ou todos de uma vez se for mais interessante, a real é que não existe uma maneira melhor, é possível Criar Exportando ao mesmo tempo, mas é bom saber as possibilidades dentro desse cenário,\r\n\r\n// Podemos exportar todas de uma vez usando '*' dessa forma;\r\n// import * as MeuModulo from './modulo1';\r\n\r\n// console.log(MeuModulo); //Vai retornar um OBJETO contendo todos os dados juntos de uma só vez...\r\n\r\n//Nesse caso estamos exportando um dado DEFAULT que é o padrão, então nomeamos como bem quisermos, e virá somente ele, esse recurso só pode ser usado uma vez por arquivo...\r\nimport qualquerNome from './modulo1';\r\nconsole.log(qualquerNome(5,4));","export const nome = 'Fellipe'; //exportando e criando ao mesmo tempo\r\nexport const sobrenome = 'Reis';\r\nexport const idade = 19;\r\n\r\nexport function soma(x,y){\r\n    return x + y;\r\n}\r\n\r\nexport default (x,y) => x * y;\r\n\r\n// export {nome, sobrenome, idade, soma};\r\n\r\n\r\n\r\n// export function combinaNomes(nome1,nome2){\r\n//     return String(nome1 + nome2);\r\n// }\r\n\r\n// export class Pessoa{\r\n//     constructor(nome,sobrenome){\r\n//         this.nome = nome;\r\n//         this.sobrenome = sobrenome;\r\n//     }\r\n// }\r\n"],"names":["console","log","x"],"sourceRoot":""}